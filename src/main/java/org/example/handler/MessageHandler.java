package org.example.handler;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.example.entity.UserEntity;
import org.example.keyboard.KeyboardService;
import org.example.service.MessageService;
import org.example.service.PhotoService;
import org.example.service.QuizService;
import org.example.service.UserService;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Message;

@Slf4j
@Component
@RequiredArgsConstructor
public class MessageHandler {
    private final MessageService messageService;
    private final PhotoService photoService;
    private final QuizService quizService;
    private final KeyboardService keyboardService;
    private final UserService userService;
    private final TheoryStageHandler theoryStageHandler;
    private final PhotoStageHandler —á–∏—Å—Ç—É—é —Å–±–æ—Ä–∫—É (clean –∏ install;

    public void handleMessage(Message message) {
        String text = message.getText();
        Long chatId = message.getChatId();
        
        log.info("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", chatId, text);
        
        UserEntity user = userService.getOrCreateUser(chatId, message.getFrom().getUserName());

        switch (text) {
            case "/start" -> handleStartCommand(chatId, user);
            case "üöÄ –ù–∞—á–∞—Ç—å —Å —Ç–µ–æ—Ä–∏–∏" -> theoryStageHandler.handle(chatId, user);
            case "üí° –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –Ω–∞ –∑–Ω–∞–Ω–∏—è" -> handleQuizCommand(chatId, user);
            case "üéÆ –ò—Å–ø—ã—Ç–∞—Ç—å –∫–≤–µ—Å—Ç" -> handleQuestCommand(chatId, user);
            case "–î–∞" -> handleYesAnswer(chatId, user);
            case "–ù–µ—Ç" -> handleNoAnswer(chatId, user);
            case "–Ø –∏–∑—É—á–∞—é –ø–∞–π—Ç–æ–Ω" -> handlePythonAnswer(chatId, user);
            default -> handleUnknownCommand(chatId, text);
        }
    }

    private void handleStartCommand(Long chatId, UserEntity user) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", chatId);
        
        photoService.sendStartPhoto(chatId);
        
        String welcomeText = "–¢—ã –ø–æ–ø–∞–ª –≤ –º–∏—Ä Java-–∫–æ–ª–ª–µ–∫—Ü–∏–π ‚Äî –£–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è!\n" +
                "–ì–¥–µ —Ç—ã —É–∑–Ω–∞–µ—à—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç ArrayList, LinkedList, –∏ –¥—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö. \n" +
                "–í —ç—Ç–æ–º –º–∏—Ä–µ —Ç–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç —Å—Ä–∞–∂–∞—Ç—å—Å—è –∑–∞ —É—Ä–æ–≤–Ω–∏, —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏, —Å–æ–±–∏—Ä–∞—Ç—å –∑–Ω–∞–Ω–∏—è, –∏—Å–∫–∞—Ç—å –ø–∞—Å—Ö–∞–ª–∫–∏ –∏ –ø–æ–ª—É—á–∞—Ç—å –±–æ–µ–≤—ã–µ –Ω–∞–≥—Ä–∞–¥—ã! üèÜ \n" +
                "\nüîπ –ù–∞—á–Ω–∏ —Å —Ç–µ–æ—Ä–∏–∏ ‚Äî –µ—Å–ª–∏ —Ç—ã –Ω–æ–≤–∏—á–æ–∫! \n" +
                "üîπ –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç ‚Äî –µ—Å–ª–∏ —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–±—è —É–≤–µ—Ä–µ–Ω–Ω–æ.\n" +
                "üîπ –ò—Å–ø—ã—Ç–∞—Ç—å –∫–≤–µ—Å—Ç ‚Äî –µ—Å–ª–∏ –ª—é–±–∏—à—å –≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∏ –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è.\n" +
                "–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å? –¢–æ–≥–¥–∞ –≤—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø—É—Ç—å –≤–æ–∏–Ω!";
        
        messageService.sendMessageWithKeyboard(chatId, welcomeText, keyboardService.createStartKeyboard());
        
        userService.updateUserStage(chatId, UserEntity.UserStage.START);
    }

    private void handleQuizCommand(Long chatId, UserEntity user) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", chatId);
        quizService.sendAdvancedQuiz(chatId);
        userService.updateUserStage(chatId, UserEntity.UserStage.QUIZ);
    }

    private void handleQuestCommand(Long chatId, UserEntity user) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –∫–≤–µ—Å—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", chatId);
        messageService.sendMessage(chatId, "–ö–≤–µ—Å—Ç –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ! üöß");
    }

    private void handleYesAnswer(Long chatId, UserEntity user) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ '–î–∞' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", chatId);
        theoryStageHandler.handle(chatId, user);
    }

    private void handleNoAnswer(Long chatId, UserEntity user) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ '–ù–µ—Ç' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", chatId);
        quizService.sendArrayListQuiz(chatId);
        messageService.sendMessageWithKeyboard(chatId, "–•–æ—Ç–∏—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–µ–æ—Ä–∏—é –æ ArrayList?", 
                keyboardService.createYesNoPythonKeyboard());
    }

    private void handlePythonAnswer(Long chatId, UserEntity user) {
        log.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ '–Ø –∏–∑—É—á–∞—é –ø–∞–π—Ç–æ–Ω' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", chatId);
        photoService.sendPythonPhoto(chatId);
        messageService.sendMessage(chatId, "–°–æ–≥–ª–∞—Å–µ–Ω?!");
    }

    private void handleUnknownCommand(Long chatId, String text) {
        log.warn("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}: {}", chatId, text);
        messageService.sendMessage(chatId, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞.");
    }
} 